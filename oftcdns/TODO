To Do List
==========

Legend:
        - Not done
        * Top priority
        . Partially done
        o Done
        d Deferrable
        D Deferred
        X Abandoned

 - modify configure.ac so that it checks for TwistedSNMP and pysnmp
 - on HUP reload zone files, ip2region.dat, and yaml configuration file
 - allow config file to be given on the command line.  relying on environment variables makes weasel sad
 . write a sanity checker for the config
   o schema.yaml written; use kwalify to validate
   - whine if there is a zone that we do not think we need
   - whine if there is no zone for a region we think we need (remember global/fallback zone)
 . increase documentation in README
 - do we keep track of how many users are using v4 and v6 on a single server?
   if not we should and add that info the pool output
 - be more push than pull for stats to keep snotes noise low etc
   - set client to +c to determine connects/exits to keep track of user counts
   - use /version to determine 'availability'
   - use stats P, /lusers, /map on start/post split to determine actual user count data
     - use stats P only for determining ipv4/6 distribution
 - say on IRC when we connect to statsbot/lose connection to statsbot, or
   get/lost connections from oftcdns clients
 - BUG (maybe):  we always say region is <clientregion>, even if we ask for a specific one.  e.g:
   | weasel@danube:~$ dig -t any uq-irc.geo.oftc.net
   | ;; ANSWER SECTION:
   | uq-irc.geo.oftc.net.    60      IN      TXT     "client is 195.58.161.115 / region is eu / server is blackhole"
   | uq-irc.geo.oftc.net.    60      IN      A       203.15.51.56
 - we often get backtraces from oftcdns in our log:
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)] Traceback (most recent call last):
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]      File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line 38, in callWithContext
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]        return context.call({ILogContext: newCtx}, func, *args, **kw)
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]      File "/usr/lib/python2.4/site-packages/twisted/python/context.py", line 59, in callWithContext
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]        return self.currentContext().callWithContext(ctx, func, *args, **kw)
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]      File "/usr/lib/python2.4/site-packages/twisted/python/context.py", line 37, in callWithContext
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]        return func(*args,**kw)
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]      File "/usr/lib/python2.4/site-packages/twisted/internet/selectreactor.py", line 139, in _doReadOrWrite
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]        why = getattr(selectable, method)()
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]    --- <exception caught here> ---
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]      File "/usr/lib/python2.4/site-packages/twisted/internet/udp.py", line 127, in doRead
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]        self.protocol.datagramReceived(data, addr)
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]      File "/usr/lib/python2.4/site-packages/twisted/names/dns.py", line 1088, in datagramReceived
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]        m.fromStr(data)
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]      File "/usr/lib/python2.4/site-packages/twisted/names/dns.py", line 1047, in fromStr
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]        self.decode(strio)
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]      File "/usr/lib/python2.4/site-packages/twisted/names/dns.py", line 992, in decode
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]        header = readPrecisely(strio, self.headerSize)
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]      File "/usr/lib/python2.4/site-packages/twisted/names/dns.py", line 153, in readPrecisely
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]        raise EOFError
   | oftcdns: [twisted.names.dns.DNSDatagramProtocol (UDP)]    exceptions.EOFError:
   Can these be caught and dealt with earlier and quieter?



Maintainer Notes
================

How To Run Locally
------------------

[PYTHONPATH=$HOME/lib/python] ./autogen.sh --sysconfdir=`pwd` --localstatedir=`pwd` --libdir=`pwd`
cd oftcdns
make -f oftcdns.mak
./oftcdns
